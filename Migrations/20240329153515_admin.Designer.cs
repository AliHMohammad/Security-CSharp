// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Security_CSharp.Data;

#nullable disable

namespace Security_CSharp.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240329153515_admin")]
    partial class admin
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("RoleUser", b =>
                {
                    b.Property<string>("RolesName")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("UsersUsername")
                        .HasColumnType("varchar(255)");

                    b.HasKey("RolesName", "UsersUsername");

                    b.HasIndex("UsersUsername");

                    b.ToTable("RoleUser");
                });

            modelBuilder.Entity("Security_CSharp.Security.Entitites.Role", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Name");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Name = "ADMIN"
                        },
                        new
                        {
                            Name = "USER"
                        });
                });

            modelBuilder.Entity("Security_CSharp.Security.Entitites.User", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.HasKey("Username");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Username = "Admin",
                            Email = "Admin@kea.dk",
                            PasswordHash = new byte[] { 15, 105, 101, 107, 65, 239, 16, 237, 127, 69, 97, 119, 129, 52, 82, 90, 25, 112, 109, 23, 241, 93, 245, 68, 228, 192, 112, 41, 149, 137, 100, 155 },
                            PasswordSalt = new byte[] { 127, 56, 225, 129, 160, 228, 147, 212, 85, 25, 0, 4, 190, 198, 241, 61, 40, 43, 45, 217, 154, 95, 8, 241, 37, 34, 105, 132, 3, 66, 66, 211, 40, 43, 56, 155, 147, 129, 209, 181, 123, 29, 217, 120, 139, 239, 118, 56, 29, 8, 6, 146, 188, 141, 40, 137, 192, 105, 134, 86, 160, 18, 182, 149 }
                        });
                });

            modelBuilder.Entity("RoleUser", b =>
                {
                    b.HasOne("Security_CSharp.Security.Entitites.Role", null)
                        .WithMany()
                        .HasForeignKey("RolesName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Security_CSharp.Security.Entitites.User", null)
                        .WithMany()
                        .HasForeignKey("UsersUsername")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
