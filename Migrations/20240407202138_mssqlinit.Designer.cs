// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Security_CSharp.Data;

#nullable disable

namespace Security_CSharp.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240407202138_mssqlinit")]
    partial class mssqlinit
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RoleUser", b =>
                {
                    b.Property<string>("user_username")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("role_name")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("user_username", "role_name");

                    b.HasIndex("role_name");

                    b.ToTable("RoleUser");

                    b.HasData(
                        new
                        {
                            user_username = "Admin",
                            role_name = "ADMIN"
                        });
                });

            modelBuilder.Entity("Security_CSharp.Security.Entitites.Role", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("name");

                    b.HasKey("Name");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Name = "ADMIN"
                        },
                        new
                        {
                            Name = "USER"
                        });
                });

            modelBuilder.Entity("Security_CSharp.Security.Entitites.User", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("username");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("password_hash");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("password_salt");

                    b.HasKey("Username");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Username = "Admin",
                            CreatedAt = new DateTime(2024, 4, 7, 22, 21, 38, 162, DateTimeKind.Local).AddTicks(5091),
                            Email = "admin@kea.dk",
                            PasswordHash = new byte[] { 68, 207, 141, 99, 35, 158, 219, 51, 223, 218, 149, 32, 244, 186, 208, 103, 160, 66, 196, 145, 23, 27, 176, 80, 96, 236, 84, 24, 132, 224, 82, 25 },
                            PasswordSalt = new byte[] { 140, 47, 214, 69, 227, 201, 230, 182, 208, 214, 236, 134, 52, 251, 100, 116, 67, 32, 187, 61, 173, 120, 41, 249, 142, 253, 2, 235, 191, 181, 167, 29, 191, 65, 194, 77, 230, 135, 112, 232, 252, 28, 135, 156, 243, 197, 220, 157, 146, 240, 76, 61, 122, 63, 150, 109, 15, 252, 33, 37, 135, 102, 159, 24 }
                        });
                });

            modelBuilder.Entity("RoleUser", b =>
                {
                    b.HasOne("Security_CSharp.Security.Entitites.Role", null)
                        .WithMany()
                        .HasForeignKey("role_name")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Security_CSharp.Security.Entitites.User", null)
                        .WithMany()
                        .HasForeignKey("user_username")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
